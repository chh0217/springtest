<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		 http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <context:property-placeholder ignore-resource-not-found="true"
                                  location="classpath*:/config.properties"/>
    <!-- 开启@AspectJ AOP代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 任务调度器 -->
    <task:scheduler id="scheduler" pool-size="10"/>

    <!-- 任务执行器 -->
    <task:executor id="executor" pool-size="10"/>

    <!--开启注解调度支持 @Async @Scheduled-->
    <task:annotation-driven executor="executor" scheduler="scheduler" proxy-target-class="true"/>
    <!--
     配置数据源
     destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="minIdle" value="0"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 连接Idle10分钟后超时，每1分钟检查一次 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="600000"/>
        <property name="filters" value="stat"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="my.ch.spring.cache.domain"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml"/>
        <!-- 显式配置Configuration -->
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <context:component-scan
            base-package="my.ch.spring">
    </context:component-scan>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="my.ch.spring.cache.dao"/>
    </bean>
    <import resource="redis/redis-config.xml"/>

    <aop:config>
        <aop:pointcut id="commonServicePointCut" expression="execution(* my.ch.spring.*.*.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="commonServicePointCut"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <tx:method name="fetch*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="exists*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
</beans>